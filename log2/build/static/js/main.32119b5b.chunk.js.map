{"version":3,"sources":["components/UserS.js","components/InputField.js","components/SubmitButton.js","components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserS","resetForm","alert","msg","console","log","setInputValue","doLogin","App","class","doLogout","React","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32119b5b.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserS{\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username:''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserS();","import React, { Component } from 'react'\r\n\r\n class InputField extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n                \r\n                <input\r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange={ (e) => this.props.onChange(e.target.value)}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default InputField;","import React, { Component } from 'react'\r\n\r\n class SubmitButton extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\">\r\n                \r\n                <button\r\n                    className='btn'\r\n                    disabled={this.props.disabled}\r\n                    onClick={() => this.props.onClick() }\r\n                >\r\n                    {this.props.text}\r\n                </button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SubmitButton;","import React, { Component } from 'react'\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserS from './UserS';\r\n\r\n class LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property,val) {\r\n        val =val.trim();\r\n        if (val.length > 14) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    async doLogin() {\r\n\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            \r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type':'application.json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password:this.state.password\r\n                })\r\n            })\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserS.isLoggedIn =true;\r\n                UserS.username= result.username;\r\n            }\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg)\r\n            }\r\n        } \r\n        catch (e) {\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LoginForm\">\r\n                \r\n                Log in\r\n\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username:''}\r\n                    onChange={ (val) => this.setInputValue('username', val) } \r\n                />\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password:''}\r\n                    onChange={ (val) => this.setInputValue('password', val) } \r\n                />\r\n                <SubmitButton\r\n                    text='Login'\r\n                    disabled={ this.state.buttonDisabled }\r\n                    onClick={ () => this.doLogin()}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginForm;","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport UserS from './components/UserS';\nimport LoginForm from './components/LoginForm';\n\nimport SubmitButton from './components/SubmitButton';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    try {\n\n      let res =await fetch('/isLoggedIn',{\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserS.loading = false;\n        UserS.isLoggedIn = true;\n        UserS.username = result.username;\n      }\n\n      else {\n        UserS.loading = false;\n        UserS.isLoggedIn = false;\n\n      }\n\n    } \n\n    catch (e) {\n      UserS.loading = false;\n      UserS.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n\n      let res =await fetch('/logout',{\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {        \n        UserS.isLoggedIn = false;\n        UserS.username = '';        \n      }\n\n    } \n\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  render()  {\n\n    if (UserS.loading) {\n      return(\n        <div class=\"App\">\n          <div className='container'>\n            Loading, please wait...\n            Okan\n            \n          </div>\n        \n        </div>\n      );\n    }\n\n    else {\n      if (UserS.isLoggedIn) {\n        return(\n          <div class=\"App\">\n            <div className='container'>\n              Welcome {UserS.username}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout() }\n              />\n\n            </div>\n          \n          </div>\n        );\n      }\n\n      return (\n        <div class=\"App\">\n          <div className='container'>\n            <LoginForm/>\n            \n          </div>\n        </div>\n        );\n    }\n    \n    \n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}